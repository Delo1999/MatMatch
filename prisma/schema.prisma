// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  email         String   @unique
  name          String?
  password      String
  allergies     String?  // JSON string med allergier
  dietaryPrefs  String?  // JSON string med kostpreferenser
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  // Relations
  savedRecipes    SavedRecipe[]
  favoriteRecipes FavoriteRecipe[]
}

model SavedRecipe {
  id                     String   @id @default(auto()) @map("_id") @db.ObjectId
  recipeName             String
  ingredientsYouHave     String   // JSON string
  missingIngredients     String   // JSON string
  fullIngredientsList    String   // JSON string
  instructions           String   // JSON string
  preparationTime        String
  cookingTime            String
  userId                 String   @db.ObjectId
  user                   User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt

  @@unique([recipeName, userId])
}

model FavoriteRecipe {
  id                     String   @id @default(auto()) @map("_id") @db.ObjectId
  recipeName             String
  ingredientsYouHave     String   // JSON string
  missingIngredients     String   // JSON string
  fullIngredientsList    String   // JSON string
  instructions           String   // JSON string
  preparationTime        String
  cookingTime            String
  userId                 String   @db.ObjectId
  user                   User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt

  @@unique([recipeName, userId])
}
